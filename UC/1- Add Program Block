## Use Case 1: Add Program Block
### Scope: Blockr programming game
### Level: User goal
### Primary Actor: User of the game
### Stakeholders and Interests:
- Player: Wants easily visible display of a palette of available blocks that he can add to his program. Wants an easy drag and drop system from the palette of blocks to the program area.
- ...

### Preconditions:
- The Palette contains valid and draggable blocks.
- Program is not running.
- The maximum number of blocks available has not been reached.

### Success Guarantee (or Postconditions):
Block is added in appropriate position without overlap when dropped in 
program area.

### Main Success Scenario;
1. The user moves the mouse cursor over a block in the Palette,
then presses the left mouse key, then moves the mouse cursor
to the Program Area, and then releases the left mouse key.
2. The system adds a new block of the same type to the Program
Area.


### Extensions (or Alternative Flows):
*a At any time, user releases the left mouse key inside a if 
   or while block.
	1. The system expands the cavity of that block 
	   and accommodates the block or group of blocks inside
	   that if or while block.

1a. When the user releases the mouse key, one of the block’s
connectors is near a compatible opposite connector of another
block.
	1. The system adds a new block of the same type to the Program
	   Area; the new block is inserted into an existing group of
	   connected blocks at the matching connection point.
	
1b. The user releases the left mouse key on an area that is not
    the program area.
	1. The system removes the duplicated dragged block.

2a. The block is released by the user near the complete bottom or top 
    of a compatible group (eventually single) of blocks.	
	1. The system adds the block:
		1a. The to be added block is a while or if block
			1. The system expands the cavity of that block 
			   and accommodate the block or group of blocks.
		1b. The to be added block is a move or turn block
			1. The system simply adds that block to that endpoint.

2b. The block is released by the user between two allowable blocks or group of blocks 
    (left/upper allowable blockor group of blocks is the parent, right/lower block or group of blocks is the child).
	1. The system adds the duplicated block to the parent block.
	2. The system adds the child block to the duplicated block.


