## Use Case 3: displace block
### Scope: Blockr programming game
### Level: User goal
### Primary Actor: User of the game
### Stakeholders and Interests:
- Player: Wants easily visible displacement of blocks. Wants an easy drag and drop system and option to remove a block.
- ...

### Preconditions:
- there is at least 1 block on the program area.
- Program is not running.

### Success Guarantee (or Postconditions):
the block is displaced to appropriate position without overlap when dropped in 
program area or is removed from the program area.

### Main Success Scenario;
1. The user moves the mouse cursor over a block in the program area,
then presses the left mouse key, then moves the mouse cursor
to the Program Area, and then releases the left mouse key.
2. The system moves the block to the appropiate position.


### Extensions (or Alternative Flows):
*a At any time, user releases the left mouse key inside an if 
   or while block.
	1. The system expands the cavity of that if or while block 
	   and accommodates the block inside that if or while block.

*b At any time,the inital position of the moved block was inside an if or while block and the
   user releases the left mouse key outside the if or while block.
	1. The system shrinks the cavity of that if or while block 
	   and accommodates the optional remaining block or group of blocks inside
	   that if or while block.

1a. When the user releases the mouse key, one of the block’s
connectors is near a compatible opposite connector of another
block.
	1. The system moves the block; the block is inserted into an existing group of
	   connected blocks at the matching connection point.
	
1b. The user releases the left mouse key on an area that is not
    the program area.
	1. The system removes the block from the program area.
	2. The system increases the number of available blocks with one.

2a. The block is released by the user near the complete bottom or top 
    of a compatible group (eventually single) of blocks.	
	1. The system adds the block or group:
		1a. The to be added block is a while or if block 
			1. The system expands the cavity of that block 
			   and accommodate the block or group of blocks.
		1b. The to be added block is a move or turn block.
			1. The system simply adds that block to the bottom or top of that group.

2b. The block is released by the user between two allowable blocks or group of blocks 
    (left/upper allowable blockor group of blocks is the parent, right/lower block or group of blocks is the child).
	1. The system adds the moved block to the parent block.
	2. The system adds the child block to the moved block.



