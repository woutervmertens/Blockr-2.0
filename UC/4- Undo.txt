## Use Case 4: Undo
### Scope: Blockr programming game
### Level: User goal
### Primary actor: User of the game
### Stakeholders and Interests:
- Player: Wants to back to the previous step with the Program Area and Game World.

### Preconditions:
- Program is not running.
- The Program Area contains maximum one group of connected blocks, where all condition sockets are connected to condition blocks.
- The goal has not been reached.

### Success Guarantee (or Postconditions):
- The last Added block back to the palette of blocks.
- The program block remove the current block. 
- The last deleted block back to programArea.

### Main Success Scenario:
1. User presses Ctrl+Z, the system execute and back to the last current block .
2. System executes the code in the last current program block and the system updates the Game World to the previous state.
3. System stops the execution. 
  

### Extensions (or Alternative Flows):
*a After execution stops, the user  clicks the Undo button(Ctrl+Z).
	1. System reverts the Game World to the previous state.
        2. System reverts the programArea to previous state.
	 
*b During execution, the user presses Ctrl+Z .
	1. System stops execution.
	2. System reverts the Game World to the previous state.
        3. System reverts the programArea to previous state.
	 
1a. User presses Undo button when there are no blocks to be executed anymore and the goal is not reached.
	1. System ends the execution and gives feedback to the user.
	2. User can reset.
2a. System analyses the previous state and finds it to lead to a failstate.
	1. System ends execution and gives feedback to the user.
	2. User can reset.
